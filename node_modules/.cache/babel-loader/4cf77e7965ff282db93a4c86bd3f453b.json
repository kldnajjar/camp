{"ast":null,"code":"import _classCallCheck from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody, Badge } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from './_data';\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable(props) {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTable).call(this, props));\n\n    _this.createCustomInsertButton = function (onClick) {\n      return React.createElement(\"button\", {\n        style: {\n          color: 'red'\n        },\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Add rows\");\n    };\n\n    _this.badgeFormatter = function (status) {\n      if (status === 'Active') return React.createElement(Badge, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Active\");else if (status === 'Inactive') return React.createElement(Badge, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Inactive\");else if (status === 'Banned') return React.createElement(Badge, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Banned\");else if (status === 'Pending') return React.createElement(Badge, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Pending\");\n    };\n\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      insertBtn: _this.createCustomInsertButton\n    };\n    return _this;\n  } // just an example\n\n\n  _createClass(DataTable, [{\n    key: \"nameFormat\",\n    value: function nameFormat(cell, row) {\n      var id = \"/users/\".concat(row.id);\n      return React.createElement(NavLink, {\n        strict: true,\n        to: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", cell, \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.table,\n        version: \"4\",\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        insertRow: true,\n        cellEdit: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        dataSort: true,\n        dataFormat: this.nameFormat,\n        cellEdit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableHeaderColumn, {\n        dataField: \"age\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Age\"), React.createElement(TableHeaderColumn, {\n        dataField: \"city\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"City\"), React.createElement(TableHeaderColumn, {\n        dataField: \"Status\",\n        dataFormat: this.badgeFormatter,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Status\")))));\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n\nexport default DataTable;","map":{"version":3,"sources":["/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js"],"names":["React","Component","NavLink","Card","CardHeader","CardBody","Badge","BootstrapTable","TableHeaderColumn","InsertButton","data","DataTable","props","createCustomInsertButton","onClick","color","badgeFormatter","status","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","insertBtn","cell","row","id","nameFormat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom'\nimport {Card, CardHeader, CardBody, Badge} from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn, InsertButton} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from './_data';\n\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.table = data.rows;\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      insertBtn: this.createCustomInsertButton\n    }\n\n  }\n\n\n  // just an example\n  nameFormat(cell, row) {\n    const id = `/users/${row.id}`\n      return (\n      <NavLink strict to={id}> {cell} </NavLink>\n    );\n  };\n\n  createCustomInsertButton = (onClick) => {\n    return (\n      <button style={ { color: 'red' } } onClick={ onClick }>Add rows</button>\n    );\n  };\n\n  render() {\n\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardBody>\n            <BootstrapTable data={this.table} version=\"4\" striped hover pagination search insertRow cellEdit options={this.options}>\n              <TableHeaderColumn dataField=\"name\" dataSort dataFormat={this.nameFormat} cellEdit>Name</TableHeaderColumn>\n              <TableHeaderColumn isKey dataField=\"email\">Email</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"age\" dataSort>Age</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"city\" dataSort>City</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"Status\" dataFormat={this.badgeFormatter} dataSort>Status</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  badgeFormatter = status => {\n    if (status === 'Active')\n      return <Badge color=\"success\">Active</Badge>\n    else if (status === 'Inactive')\n      return <Badge color=\"secondary\">Inactive</Badge>\n    else if (status === 'Banned')\n      return <Badge color=\"danger\">Banned</Badge>\n    else if (status === 'Pending')\n      return <Badge color=\"warning\">Pending</Badge>\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}