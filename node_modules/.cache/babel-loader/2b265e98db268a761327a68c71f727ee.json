{"ast":null,"code":"import _classCallCheck from \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Badge } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"react-bootstrap-table/dist//react-bootstrap-table-all.min.css\";\nimport data from \"./_data\";\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createCustomInsertButton = function (onClick) {\n      return React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Add company\");\n    };\n\n    _this.badgeFormatter = function (status) {\n      if (status === \"Active\") return React.createElement(Badge, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Active\");else if (status === \"Inactive\") return React.createElement(Badge, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Inactive\");else if (status === \"Banned\") return React.createElement(Badge, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Banned\");else if (status === \"Pending\") return React.createElement(Badge, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Pending\");else return status;\n    };\n\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"nameFormat\",\n    // just an example\n    value: function nameFormat(cell, row) {\n      var id = \"/users/\".concat(row.id);\n      return React.createElement(NavLink, {\n        strict: true,\n        to: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \" \", cell, \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cellEditProp = {\n        mode: \"click\"\n      };\n      this.table = data.rows;\n      this.options = {\n        sortIndicator: true,\n        hideSizePerPage: true,\n        paginationSize: 3,\n        hidePageListOnlyOnePage: true,\n        clearSearch: true,\n        alwaysShowAllBtns: false,\n        withFirstAndLast: false,\n        insertBtn: this.createCustomInsertButton,\n        onCellEdit: this.props.onCellEdit,\n        onDeleteRow: this.props.onDeleteRow,\n        onAddRow: this.props.onAddRow\n      };\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.table,\n        version: \"4\",\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        insertRow: true,\n        options: this.options,\n        cellEdit: cellEditProp,\n        containerClass: \"custom-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        dataSort: true,\n        dataFormat: this.nameFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Company\"), React.createElement(TableHeaderColumn, {\n        dataField: \"joined_date\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Joined date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"subscription\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Subscription\"), React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataFormat: this.badgeFormatter,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Status\")))));\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n\nexport default DataTable;","map":{"version":3,"sources":["/home/khaled/projects/coreUI/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js"],"names":["React","Component","NavLink","Card","CardHeader","CardBody","Badge","BootstrapTable","TableHeaderColumn","data","DataTable","createCustomInsertButton","onClick","badgeFormatter","status","cell","row","id","cellEditProp","mode","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","insertBtn","onCellEdit","props","onDeleteRow","onAddRow","nameFormat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Badge } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"react-bootstrap-table/dist//react-bootstrap-table-all.min.css\";\nimport data from \"./_data\";\n\nclass DataTable extends Component {\n  // just an example\n  nameFormat(cell, row) {\n    const id = `/users/${row.id}`;\n    return (\n      <NavLink strict to={id}>\n        {\" \"}\n        {cell}{\" \"}\n      </NavLink>\n    );\n  }\n\n  createCustomInsertButton = onClick => {\n    return (\n      <button className=\"btn btn-primary\" onClick={onClick}>\n        Add company\n      </button>\n    );\n  };\n\n  render() {\n    const cellEditProp = {\n      mode: \"click\"\n    };\n\n    this.table = data.rows;\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      insertBtn: this.createCustomInsertButton,\n      onCellEdit: this.props.onCellEdit,\n      onDeleteRow: this.props.onDeleteRow,\n      onAddRow: this.props.onAddRow\n    };\n\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardBody>\n            <BootstrapTable\n              data={this.table}\n              version=\"4\"\n              striped\n              hover\n              pagination\n              search\n              insertRow\n              options={this.options}\n              cellEdit={cellEditProp}\n              containerClass=\"custom-style\"\n            >\n              <TableHeaderColumn\n                dataField=\"id\"\n                dataSort\n                dataFormat={this.nameFormat}\n              >\n                ID\n              </TableHeaderColumn>\n              <TableHeaderColumn isKey dataField=\"company\">\n                Company\n              </TableHeaderColumn>\n              <TableHeaderColumn dataField=\"joined_date\" dataSort>\n                Joined date\n              </TableHeaderColumn>\n              <TableHeaderColumn dataField=\"subscription\" dataSort>\n                Subscription\n              </TableHeaderColumn>\n              <TableHeaderColumn\n                dataField=\"status\"\n                dataFormat={this.badgeFormatter}\n                dataSort\n              >\n                Status\n              </TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  badgeFormatter = status => {\n    if (status === \"Active\") return <Badge color=\"success\">Active</Badge>;\n    else if (status === \"Inactive\")\n      return <Badge color=\"secondary\">Inactive</Badge>;\n    else if (status === \"Banned\") return <Badge color=\"danger\">Banned</Badge>;\n    else if (status === \"Pending\")\n      return <Badge color=\"warning\">Pending</Badge>;\n    else return status;\n  };\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}