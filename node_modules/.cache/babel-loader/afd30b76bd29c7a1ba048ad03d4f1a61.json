{"ast":null,"code":"import _classCallCheck from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody, Badge } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from './_data';\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable(props) {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTable).call(this, props));\n\n    _this.createCustomInsertButton = function (onClick) {\n      return React.createElement(\"button\", {\n        className: \"primary\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Add company\");\n    };\n\n    _this.badgeFormatter = function (status) {\n      if (status === 'Active') return React.createElement(Badge, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Active\");else if (status === 'Inactive') return React.createElement(Badge, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Inactive\");else if (status === 'Banned') return React.createElement(Badge, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Banned\");else if (status === 'Pending') return React.createElement(Badge, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Pending\");else return status;\n    };\n\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      insertBtn: _this.createCustomInsertButton,\n      onCellEdit: _this.props.onCellEdit,\n      onDeleteRow: _this.props.onDeleteRow,\n      onAddRow: _this.props.onAddRow\n    };\n    return _this;\n  } // just an example\n\n\n  _createClass(DataTable, [{\n    key: \"nameFormat\",\n    value: function nameFormat(cell, row) {\n      var id = \"/users/\".concat(row.id);\n      return React.createElement(NavLink, {\n        strict: true,\n        to: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", cell, \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cellEditProp = {\n        mode: 'click'\n      };\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.table,\n        version: \"4\",\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        insertRow: true,\n        options: this.options,\n        cellEdit: cellEditProp,\n        containerClass: \"custom-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        dataSort: true,\n        dataFormat: this.nameFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Company\"), React.createElement(TableHeaderColumn, {\n        dataField: \"joined_date\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Joined date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"subscription\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Subscription\"), React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        dataFormat: this.badgeFormatter,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Status\")))));\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n\nexport default DataTable;","map":{"version":3,"sources":["/home/khaled/projects/coreui-pro-react-admin-template-starter-2.6.0/src/views/Tables/DataTable/DataTable.js"],"names":["React","Component","NavLink","Card","CardHeader","CardBody","Badge","BootstrapTable","TableHeaderColumn","InsertButton","data","DataTable","props","createCustomInsertButton","onClick","badgeFormatter","status","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","insertBtn","onCellEdit","onDeleteRow","onAddRow","cell","row","id","cellEditProp","mode","nameFormat"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,KAApC,QAAgD,YAAhD;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA2CC,YAA3C,QAA8D,uBAA9D;AACA,OAAO,+DAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UA6BnBC,wBA7BmB,GA6BQ,UAACC,OAAD,EAAa;AACtC,aACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAGA,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AAGD,KAjCkB;;AAAA,UA2DnBC,cA3DmB,GA2DF,UAAAC,MAAM,EAAI;AACzB,UAAIA,MAAM,KAAK,QAAf,EACE,OAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CADF,KAEK,IAAIA,MAAM,KAAK,UAAf,EACH,OAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP,CADG,KAEA,IAAIA,MAAM,KAAK,QAAf,EACH,OAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CADG,KAEA,IAAIA,MAAM,KAAK,SAAf,EACH,OAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP,CADG,KAGJ,OAAOA,MAAP;AACF,KAtEkB;;AAGjB,UAAKC,KAAL,GAAaP,IAAI,CAACQ,IAAlB;AACA,UAAKC,OAAL,GAAe;AACbC,MAAAA,aAAa,EAAE,IADF;AAEbC,MAAAA,eAAe,EAAE,IAFJ;AAGbC,MAAAA,cAAc,EAAE,CAHH;AAIbC,MAAAA,uBAAuB,EAAE,IAJZ;AAKbC,MAAAA,WAAW,EAAE,IALA;AAMbC,MAAAA,iBAAiB,EAAE,KANN;AAObC,MAAAA,gBAAgB,EAAE,KAPL;AAQbC,MAAAA,SAAS,EAAE,MAAKd,wBARH;AASbe,MAAAA,UAAU,EAAE,MAAKhB,KAAL,CAAWgB,UATV;AAUbC,MAAAA,WAAW,EAAE,MAAKjB,KAAL,CAAWiB,WAVX;AAWbC,MAAAA,QAAQ,EAAE,MAAKlB,KAAL,CAAWkB;AAXR,KAAf;AAJiB;AAkBlB,G,CAGD;;;;;+BACWC,I,EAAMC,G,EAAK;AACpB,UAAMC,EAAE,oBAAaD,GAAG,CAACC,EAAjB,CAAR;AACE,aACA,oBAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAgB,QAAA,EAAE,EAAEA,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0BF,IAA1B,MADA;AAGH;;;6BASQ;AAEP,UAAMG,YAAY,GAAG;AACnBC,QAAAA,IAAI,EAAE;AADa,OAArB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKlB,KAA3B;AAAkC,QAAA,OAAO,EAAC,GAA1C;AAA8C,QAAA,OAAO,MAArD;AAAsD,QAAA,KAAK,MAA3D;AAA4D,QAAA,UAAU,MAAtE;AAAuE,QAAA,MAAM,MAA7E;AAA8E,QAAA,SAAS,MAAvF;AAAwF,QAAA,OAAO,EAAE,KAAKE,OAAtG;AAA+G,QAAA,QAAQ,EAAGe,YAA1H;AAAyI,QAAA,cAAc,EAAC,cAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,IAA7B;AAAkC,QAAA,QAAQ,MAA1C;AAA2C,QAAA,UAAU,EAAE,KAAKE,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,UAAU,EAAE,KAAKrB,cAAvD;AAAuE,QAAA,QAAQ,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF,CADF,CADF,CADF;AAeD;;;;EA1DqBd,S;;AA0ExB,eAAeU,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom'\nimport {Card, CardHeader, CardBody, Badge} from 'reactstrap';\nimport {BootstrapTable, TableHeaderColumn, InsertButton} from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from './_data';\n\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.table = data.rows;\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      insertBtn: this.createCustomInsertButton,\n      onCellEdit: this.props.onCellEdit,\n      onDeleteRow: this.props.onDeleteRow,\n      onAddRow: this.props.onAddRow\n    }\n\n  }\n\n\n  // just an example\n  nameFormat(cell, row) {\n    const id = `/users/${row.id}`\n      return (\n      <NavLink strict to={id}> {cell} </NavLink>\n    );\n  };\n\n  createCustomInsertButton = (onClick) => {\n    return (\n      <button className=\"primary\" onClick={ onClick }>Add company</button>\n    );\n  };\n\n\n  render() {\n\n    const cellEditProp = {\n      mode: 'click'\n    };\n\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardBody>\n            <BootstrapTable data={this.table} version=\"4\" striped hover pagination search insertRow options={this.options} cellEdit={ cellEditProp } containerClass='custom-style'>\n              <TableHeaderColumn dataField=\"id\" dataSort dataFormat={this.nameFormat}>ID</TableHeaderColumn>\n              <TableHeaderColumn isKey dataField=\"company\">Company</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"joined_date\" dataSort>Joined date</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"subscription\" dataSort>Subscription</TableHeaderColumn>\n              <TableHeaderColumn dataField=\"status\" dataFormat={this.badgeFormatter} dataSort>Status</TableHeaderColumn>\n            </BootstrapTable>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  badgeFormatter = status => {\n    if (status === 'Active')\n      return <Badge color=\"success\">Active</Badge>\n    else if (status === 'Inactive')\n      return <Badge color=\"secondary\">Inactive</Badge>\n    else if (status === 'Banned')\n      return <Badge color=\"danger\">Banned</Badge>\n    else if (status === 'Pending')\n      return <Badge color=\"warning\">Pending</Badge>\n    else\n     return status\n  }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}